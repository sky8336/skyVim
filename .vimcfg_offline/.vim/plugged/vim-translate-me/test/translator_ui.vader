Include: default_config.vader


Before:
  let translations = {
    \ 'status': 1,
    \ 'results': [
    \   {
    \     'engine': 'ciba',
    \     'paraphrase': '',
    \     'phonetic': 'ˈɪmpɔ:t',
    \     'explain': ['n. 进口，进口商品;输入;重要性;意义;', 'vt. 输入，进口;对…有重大关系;意味着;', 'vi. 具重要性;']
    \     },
    \   {
    \     'engine': 'youdao',
    \     'phonetic': '',
    \     'paraphrase': '进口',
    \     'explain': ['n. 进口，进口货；输入；意思，含义；重要性', 'vt. 输入，进口；含…的意思', 'vi. 输入，进口']
    \   }],
    \ 'text': 'import'
    \ }


  function! FindBuffer(filetype)
    let found_bufnr = -1
    for bufnr in range(1, bufnr('$'))
      if getbufvar(bufnr, '&filetype') ==# a:filetype
        let found_bufnr = bufnr
      endif
    endfor
    return found_bufnr
  endfunction


Execute (Floating: Basic):
  call translator#ui#window(translations)
  Assert FindBuffer('translator_border') > -1
  Assert FindBuffer('translator') > -1
  doautocmd CursorMoved
  Assert FindBuffer('translator_border') == -1
  Assert FindBuffer('translator') == -1


Execute (Floating: Jump into floating window):
  call translator#ui#window(translations)
  call translator#ui#try_jump_into()
  AssertEqual 'translator', &filetype
  AssertEqual 1, &wrap
  AssertEqual 3, &conceallevel
  Assert FindBuffer('translator') > -1
  Assert FindBuffer('translator_border') > -1
  wincmd w
  Assert FindBuffer('translator') == -1
  Assert FindBuffer('translator_border') == -1


Execute (Floating: let g:translator_window_borderchars = []):
  let g:translator_window_borderchars = []
  call translator#ui#window(translations)
  call translator#ui#try_jump_into()
  AssertEqual 'translator', &filetype
  AssertEqual 1, &foldcolumn
  AssertEqual 1, &wrap
  AssertEqual 3, &conceallevel
  AssertEqual 'NormalFloat:TranslatorNF,FoldColumn:TranslatorNF', &winhl
  Assert FindBuffer('translator') > -1
  Assert FindBuffer('translator_border') == -1
  wincmd w
  Assert FindBuffer('translator') == -1
  Assert FindBuffer('translator_border') == -1


Execute (Exit):
  sleep 100m
